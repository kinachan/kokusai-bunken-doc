[
  {
    "id": "0",
    "title": "example",
    "content": "# Read Me\r\n\r\nこんな感じでファイルを作成していくと、ドキュメントが簡単に作成できます。\r\n\r\n---\r\n\r\n\r\n### セットアップ方法\r\n元のGitのURLをcloneします。\r\n\r\n```\r\ngit clone https://github.com/kinachan/document-creator.git\r\n```\r\n元のGitを削除します\r\n```\r\nrm -rf .git\r\n```\r\nGitHub上で新規リポジトリを発行します。\r\nコマンドは指示に従ってください。\r\n\r\n\r\n#### envファイルの修正\r\n.envファイルの中身をコマンドで修正します\r\n\r\n```\r\nnode setup-env プロジェクト名\r\n```\r\nプロジェクト名は任意のプロジェクト名を設定します（日本語可能）\r\nBasic認証のIDとパスワードも設定されるので、こちらをお客様に伝えます。\r\n\r\n\r\n##### vercelのセットアップ\r\nGitHubとVercelを紐づけます。\r\n\r\n\r\n### 設計書\r\n\r\n以下のテンプレートを使用する。\r\nMarkdownからドキュメントをコピーして使用する\r\n\r\n# ドキュメントタイトル\r\n\r\n本頁では「」を定義する\r\n\r\n## フロー詳細\r\n\r\n### 1. カテゴリ\r\n\r\n#### フロー項目\r\n\r\n\r\n\r\n\r\n\r\n\r\n### 作成方法\r\n\r\n- docs配下にmdファイルを配置します\r\n- 画像は相対パスで記載します。\r\n  - docsに配置する際は`./fileName.png`\r\n  - imgファイルに配置する際は`./img/fileName.png`\r\n- HTML/CSSファイルは修正不要です。\r\n- navbarのリンクも設置されます。\r\n- マークダウンファイルの先頭に`_（アンダースコア）`を設置するとリンクから除外されます\r\n\r\n---\r\n画像の設置例\r\n\r\n![Logo](./img/yoshi_cocoa.png)\r\n\r\n\r\n## Markdown Template.\r\n以下がテンプレートファイルです。\r\nコピペしてご利用ください。\r\n\r\n\r\n# Title1\r\n## Title2\r\n### Title3\r\n#### Title4\r\n##### Title5\r\n###### Title6\r\ntext\r\ntext2\r\n**Bold**  \r\n*Italic*  \r\n\r\n\r\n- [ ] a task list item\r\n- [ ] list syntax required\r\n- [ ] normal **formatting**, @mentions, #1234 refs\r\n- [ ] incomplete\r\n- [x] completed\r\n- hogehoge\r\n  - fuga\r\n    - bar\r\n    - [ ] motimot\r\n1. fuba\r\n1. fuba\r\n1. fuba\r\n\r\n|table1|table2|table3|\r\n|:--|--:|:--:|\r\n|align left|align right|align center|\r\n|a|b|c|\r\n\r\n### Quote\r\n>This is Quote\r\n>This is Quote\r\n>>This is Quote\r\n>>>This is Quote\r\n\r\n\r\n### Code Block\r\n```JavaScript\r\n// For Debug\r\nprintf = function(str){\r\n    window.alert(str);\r\n};\r\n// Add the processing of applications\r\n```\r\n### Horizon\r\n---\r\n### Link\r\nhttps://ob-g.com/corpo/\r\n[Objective Group](https://ob-g.com/corpo/)\r\n![Logo](https://ob-g.com/obg_staging/wp-content/themes/obg/res/img/03_slider/top.jpg)\r\n"
  },
  {
    "id": "1",
    "title": "アクセス管理について",
    "content": "\r\n\r\n"
  },
  {
    "id": "2",
    "title": "使用ライブラリ",
    "content": ""
  },
  {
    "id": "3",
    "title": "動作確認",
    "content": "\r\n\r\n## 動作確認\r\n\r\n本頁では動作確認の事項についてまとめます"
  },
  {
    "id": "4",
    "title": "基本設計書-API共通機能",
    "content": "\r\n# API共通機能\r\n\r\n本頁では、クライアントとサーバー側の共通機能についての定義を行う\r\n\r\n## フロー詳細\r\n\r\n```mermaid \r\nflowchart TD\r\n  Start(スタート) --> reqSetup[リクエスト情報送信]\r\n  reqSetup --> sendReq{リクエスト送信}\r\n  sendReq --> |異常|ErrorEnd(異常終了)\r\n  sendReq --> |正常|tokenCheck{トークン整合性確認} \r\n  \r\n  subgraph サーバー処理\r\n    tokenCheck --> anyProcess[任意の処理]\r\n  end\r\n\r\n  anyProcess --> returnData(データ返却)\r\n  tokenCheck --> |不一致・異常|ErrorEnd\r\n\r\n  click reqSetup href \"#リクエスト情報送信4\"\r\n  click sendReq href \"#リクエスト送信4\"\r\n  click tokenCheck href \"#トークン整合性確認4\"\r\n  click anyProcess href \"#任意の処理4\"\r\n  click returnData href \"#データ返却4\"\r\n  click ErrorEnd href \"#異常終了4\"\r\n\r\n```\r\n### API共通処理\r\n\r\n#### リクエスト情報送信\r\n\r\nAPIリクエストのセットアップを実施する\r\n\r\n##### JSONリクエスト - Httpヘッダー情報\r\n\r\n| カテゴリ | キー名称 | 値 | 備考 |\r\n| ---- | ---- | ---- | ---- |\r\n| HTTPメソッド | Method | 処理に応じて変更 |  |\r\n| HTTPヘッダー | Authentication | Bearer: + Firebaseから発行されたIDトークン | IDトークンはFirebaseの処理を介すると発行される |\r\n| HTTPヘッダー | Content-type | application/json |  |\r\n| HTTPヘッダー | Accept | application/json, \\*/\\* |  |\r\n\r\n※Httpのクエリパラメータ・Bodyについては処理に応じて変更する為、こちらでは割愛\r\n\r\n**また学会利用者向けの機能については、Firebaseから発行されたIDトークンは存在しないため、Authenticationは外したものを使用する**\r\n\r\n//TODO: 同意書アップロードの機能もあるため、multipart/formdataの記載も必要\r\n\r\n#### リクエスト送信\r\n\r\nサーバー側へリクエストを実施する\r\nサーバー側の応答の結果、下記のエラーが発生した場合は次項目のエラーメッセージを画面に描画し終了\r\n\r\n| ステータスコード | エラーメッセージ | 備考 |\r\n| ---- | ---- | ---- |\r\n| 400番台 | エラーが発生しました | クライアント側エラー、不正なリクエストの場合該当の結果が返却される |\r\n| 500番台 | エラーが発生しました | サーバー側エラー、ネットワークやプログラムの不具合が発生した場合、該当の結果が返却される |\r\n\r\nエラーが上記の処理を実施した\r\n\r\n\r\n#### トークン整合性確認\r\n\r\n**学会利用者向けの機能については、トークンが付与されていない為、本処理はスキップする**\r\n\r\nサーバーへの疎通が送信が完了した場合、Firebaseのトークンの整合性の確認を実施する\r\n上記の処理を実施することにより、本Appにて認証を受けてないリクエストはブロックすることが可能となる\r\n\r\nリクエストにて送信した`Bearer: + Firebaseから発行されたIDトークン`を取得し、\r\nFirebaseのトークンの整合性確認を実施し、判定を行う。\r\n\r\n- トークンの整合性が確認できた場合\r\n  - [任意の処理](#任意の処理4)へと進む\r\n- トークンの整合性が確認できなかった場合\r\n  - 403エラーを返却する\r\n\r\n#### 任意の処理\r\n\r\n呼び出し先のAPIに従い、処理を実施する\r\n※処理に応じて異なる為、本処理の詳細は割愛\r\n\r\n#### データ返却\r\n\r\n任意の処理に応じてデータを返却する\r\nデータの形式はリクエスト送信の`Content-Type`に応じて返却する\r\n\r\n#### 異常終了\r\n\r\nサーバーへの疎通が失敗した場合、またはトークンの整合性が確認できなかった場合は\r\n任意のエラーメッセージを画面上に表示し終了する\r\n\r\n| ステータスコード | エラーメッセージ | 備考 |\r\n| ---- | ---- | ---- |\r\n| 400番台 | エラーが発生しました | クライアント側エラー、不正なリクエストの場合該当の結果が返却される |\r\n| 500番台 | エラーが発生しました | サーバー側エラー、ネットワークやプログラムの不具合が発生した場合、該当の結果が返却される |"
  },
  {
    "id": "5",
    "title": "基本設計書-データベース定義書",
    "content": ""
  },
  {
    "id": "6",
    "title": "基本設計書-パスワード変更機能",
    "content": ""
  },
  {
    "id": "7",
    "title": "基本設計書-ワンタイムURL発行機能",
    "content": ""
  },
  {
    "id": "8",
    "title": "基本設計書-交通費申請",
    "content": ""
  },
  {
    "id": "9",
    "title": "基本設計書-交通費申請一覧",
    "content": ""
  },
  {
    "id": "10",
    "title": "基本設計書-交通費申請詳細",
    "content": ""
  },
  {
    "id": "11",
    "title": "基本設計書-利用者認証機能",
    "content": "\r\n\r\n# 設計書 - 利用者認証機能\r\n\r\n本頁では学会利用者が本Appを利用可能にするまでの認証機能を定義する\r\n\r\n## フロー概要\r\n\r\n\r\n```mermaid\r\n\r\nsequenceDiagram\r\nautonumber\r\n\r\nactor user as 学会利用者\r\nactor admin as 学会管理者\r\nparticipant server as サーバー\r\n\r\nadmin->>+server: 学会利用者の申請データ登録\r\nserver->>+user: メール送信\r\n  note right of server: メールには専用のIDが付与されたURLと<br/>手続き用コードを送付\r\nuser->>+user: メールを開き、URLを開く\r\nuser->>+server: ページのURLにアクセスし、手続き用のコードを入力\r\nserver->>+user: 認証コードを送信\r\n  note right of server: 認証コードのみを入力\r\nuser->>+server: 認証コードを入力\r\nserver->>+user: フォーム表示\r\n```\r\n\r\n本頁では認証処理のみ抜粋して記載する。\r\nそのため、学会管理者の申請データ登録・フォーム表示以降の処理については割愛とする\r\n\r\n### 1. 学会利用者の申請データ登録\r\n\r\n//TODO: 申請データ登録のリンクを貼る\r\n学会管理者が学会利用者の情報を入力し、認証可能な状態へと登録を実施\r\n※本処理の前提となるが、本頁からは外れる為詳細については割愛\r\n\r\n\r\n### 2. 手続き用メール送信\r\n\r\n学会利用者（交通費の申請者）へ向けてメールを送信する。\r\n\r\n#### 手続き用メール送信-詳細フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n  Start(スタート) --> sendMail{メール送信実行}\r\n  subgraph サーバー処理\r\n    sendMail --> |送信成功|successMsg[メッセージ表示]\r\n    sendMail --> |送信失敗|errMsg[エラーメッセージ表示]\r\n  end\r\n  successMsg --> fin(終了)\r\n  errMsg --> fin(終了)\r\n\r\n  click sendMail href \"#手続き用メール送信-メール送信実行5\"\r\n  click successMsg href \"#手続き用メール送信-メッセージ表示5\"\r\n  click errMsg href \"#手続き用メール送信-エラーメッセージ表示5\"\r\n\r\n```\r\n\r\n##### 手続き用メール送信-メール送信実行\r\n\r\nメール送信を実行する、送信する内容については以下の項目となる\r\nまた、メール送信に伴う設定情報については[環境設定項目](基本設計書-環境設定#アプリケーション環境設定情報3)を参照\r\n\r\n| 名称 | 設定値 | 備考欄 |\r\n| ---- | ---- | ---- |\r\n| From | 学会利用者のメールアドレス | パラメーターについては下記を参照 |\r\n| 件名 | 交通費申請の手続きコードが発行されました。 |  |\r\n| 本文 | {name}<br/>以下のURLをクリックして、交通費の入力をお願いします。<br/>画面が表示されたら手続き用のコードを入力してください。<br/>手続き用コード：{processCode}<br/><br/>[URL形式で ドメイン+/travel-cost/{applicantId}<br/> | パラメーターについては下記を参照 |\r\n\r\nまた、メール送信に伴うパラメーターは以下の通り\r\n\r\n| 名称 | 物理名 | 説明 |\r\n| ---- | ---- | ---- |\r\n| 氏名 | name | 学会利用者の氏名、前処理の入力情報を使用 |\r\n| 手続きコード | processCode | 自動採番の6桁の数字 |\r\n| 申請ID | applicantId | 前処理にて発行されたユニークID |\r\n\r\n本処理の送信結果（送信成功フラグ）を画面の処理へ返却する\r\n\r\n- true\r\n  - [手続き用メール送信-メッセージ表示](#手続き用メール送信-メッセージ表示5)へ進む\r\n- false\r\n  - [手続き用メール送信-エラーメッセージ表示](#手続き用メール送信-エラーメッセージ表示5)へ進む\r\n\r\n\r\n##### 手続き用メール送信-メッセージ表示\r\n\r\nメールが問題なく送信された場合は画面上に`送信が完了しました`とメッセージを表示する。\r\n\r\n> 補足事項\r\n> 本メールが送信された段階では特に有効期限は設けておらず、学会利用者がURLをクリックしない場合でも有効となる\r\n> ただ、デバイスの切り替え（PCの買替・機種変更）などでメールの紛失が予想されるため\r\n> その際は学会管理者が同条件でメールの再送信を可能にする、この操作を行った場合は手続きコードの更新のみとする\r\n\r\n##### 手続き用メール送信-エラーメッセージ表示\r\n\r\n送信が失敗した場合、`エラーが発生しました`と表示する。\r\n\r\n### 3. URL表示\r\n\r\n本処理にてURLの妥当性チェックを実施する\r\n\r\n#### URL表示-詳細フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n\r\nstart(スタート)--> showUrl[URL遷移]\r\nshowUrl --> ApiCall{API送信}\r\nApiCall --> |エラー発生| errMsg[エラーメッセージ]\r\nerrMsg --> fin(終了)\r\nsubgraph サーバー処理\r\n  ApiCall --> |正常| exists[データ存在チェック]\r\n  exists --> returnData[データ返却]\r\nend\r\nreturnData --> dataCheck{データチェック}\r\ndataCheck --> |false| fin\r\ndataCheck --> |true| showView(画面表示)\r\n\r\nclick showUrl href \"#URL表示-URL遷移5\"\r\nclick ApiCall href \"#URL表示-API送信5\"\r\nclick errMsg href \"#URL表示-エラーメッセージ5\"\r\nclick exists href \"#URL表示-データ存在チェック5\"\r\nclick returnData href \"#URL表示-データ返却5\"\r\nclick dataCheck href \"#URL表示-データチェック5\"\r\nclick showView href \"#URL表示-画面表示5\"\r\n\r\n```\r\n\r\n##### URL表示-URL遷移\r\n\r\n交通費申請者がメールに記載されたURLをクリックし、画面を表示する\r\nURLには申請IDが付与されているが、安全性のために後続の処理にてURLの妥当性を確認する\r\n\r\n##### URL表示-API送信\r\n\r\nURLに付与されたパラメーターを元にサーバー側へリクエストを送信する\r\n\r\n| URL | HTTPメソッド |\r\n| ---- | ---- |\r\n| `/api/code/init` | GET |\r\n\r\n**リクエスト情報**\r\n| キー名称 | 値 |\r\n| ---- | ---- |\r\n| id | クエリパラメータに付与されたID |\r\n\r\n\r\nその他のHttpヘッダー情報は[API共通機能](基本設計書-API共通機能#リクエスト情報送信4)を参照\r\n\r\n##### URL表示-データ存在チェック\r\n\r\n前処理で送信したリクエスト情報を元にデータベースへ存在確認を実施する\r\nFirebase DataStoreへとアクセスを実施する\r\n\r\n- データが存在している場合\r\n  - `true`を返却する\r\n- データが存在していない場合\r\n  - `false`を返却する\r\n\r\n##### URL表示-データ返却\r\n\r\n前処理の判定結果をレスポンスとして返却する\r\n\r\n##### URL表示-データチェック\r\n\r\nレスポンスデータを元に下記の処理分岐を実施する\r\n\r\n- `true`の場合\r\n  - [URL表示-画面表示](#URL表示-画面表示5)へと進む\r\n- `false`の場合\r\n  - [URL表示-エラーメッセージ](#URL表示-エラーメッセージ5)へと進む\r\n\r\n##### URL表示-画面表示\r\n \r\n画面が正常に表示され、入力可能な状態となる\r\n\r\n##### URL表示-エラーメッセージ\r\n\r\nエラー画面へと遷移する\r\n\r\n### 4. 手続き用コード入力\r\n\r\n学会利用者はメールにて記載された手続き用コードを入力する。\r\n正しい値を入力すると次工程へと進む\r\n\r\n#### 手続き用コード入力-詳細フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n  Start(スタート) --> inputCode[ユーザー入力]\r\n  inputCode --> validCheck{バリデーションチェック}\r\n\r\n  validCheck --> |エラー| inputCode\r\n  validCheck --> |エラーなし| exists{手続き用コード一致確認}\r\n  exists ---> |一致| fin(次の処理へ)\r\n  exists --> |不一致| errMsg[エラーメッセージ表示]\r\n  errMsg --> inputCode\r\n  \r\n  click inputCode href \"#手続き用コード入力-ユーザー入力5\"\r\n  click validCheck href \"#手続き用コード入力-バリデーションチェック5\"\r\n  click exists href \"#手続き用コード入力-手続き用コード一致確認5\"\r\n  click errMsg href \"#手続き用コード入力-エラーメッセージ表示5\"\r\n\r\n```\r\n\r\n##### 手続き用コード入力-ユーザー入力\r\n\r\nユーザーがメールに送付された手続き用コードを入力し、送信ボタンを押下する\r\n(入力中でもバリデーションチェックは実施される)\r\n\r\n##### 手続き用コード入力-バリデーションチェック\r\n\r\n以下の条件で入力値の妥当性チェックを実施する\r\n全て条件を合格してることとする\r\n\r\n| 条件 |\r\n| ---- |\r\n| 入力値が存在している |\r\n| 6桁の入力値である |\r\n| 半角数字である |\r\n\r\n- 条件が全て満たしている\r\n  - [手続き用コード入力-手続き用コード一致確認](#手続き用コード入力-手続き用コード一致確認5)へと進む\r\n- いずれかの条件に満たしていない\r\n  - [手続き用コード入力-ユーザー入力](#手続き用コード入力-ユーザー入力5)へと進む\r\n\r\n\r\n##### 手続き用コード入力-手続き用コード一致確認\r\n\r\nデータベースに登録されている手続き用コードの確認を実施するために、サーバー側へリクエストを送信する\r\n\r\n| URL | HTTPメソッド |\r\n| ---- | ---- |\r\n| `/api/code/check` | POST |\r\n\r\n**リクエスト情報**\r\n| キー名称 | 値 |\r\n| ---- | ---- |\r\n| processCode | 画面上で入力された手続きコード |\r\n\r\nその他のHttpヘッダー情報は[API共通機能](基本設計書-API共通機能#リクエスト情報送信4)を参照\r\n\r\n※APIの処理については[API共通機能](基本設計書-API共通機能)を参照\r\n\r\n前処理で送信したprocessCodeを元にデータベースへ存在確認を実施する\r\nFirebase DataStoreへとアクセスを実施する\r\n\r\n- `ProcessCode`が存在している場合\r\n  - [5. 認証コードを送信](#5.認証コードを送信3)へと進む\r\n  - **※この際はクライアントへレスポンスは返さずに、次の工程へと進める**\r\n- `ProcessCode`が存在していない場合\r\n  - [手続き用コード入力-エラーメッセージ表示](#手続き用コード入力-エラーメッセージ表示5)へと進む\r\n\r\n##### 手続き用コード入力-エラーメッセージ表示\r\n\r\n以下のエラーメッセージを表示する\r\n\r\n|エラーメッセージ|\r\n|---|\r\n|手続き用コードが古いか、一致しませんでした。|\r\n\r\n### 5. 認証コードを送信\r\n\r\nURLにて発行されたトークン、手続き用コードが一致している場合は本人と認識するが\r\n安全性を考慮し、この段階で認証コード付きのメールを学会利用者へ再度送信する。\r\n\r\n#### 認証コード送信-詳細フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n  subgraph サーバー処理\r\n    Start(スタート) --> setupParam[メールパラメータ設定]\r\n    setupParam --> sendMail[メール送信]\r\n  end\r\n\r\n  sendMail --> returnValCheck{戻り値チェック}\r\n  returnValCheck --> |エラーメッセージなし|viewChange(画面表示切替)\r\n  returnValCheck --> |エラーメッセージあり|errMsg(エラーメッセージ)\r\n\r\n  click setupParam href \"#認証コード送信-メールパラメータ設定5\"\r\n  click sendMail href \"#認証コード送信-メール送信5\"\r\n  click returnValCheck href \"#認証コード送信-戻り値チェック5\"\r\n  click viewChange href \"#認証コード送信-画面表示切替5\"\r\n  click errMsg href \"#認証コード送信-エラーメッセージ5\"\r\n```\r\n\r\n##### 認証コード送信-メールパラメータ設定\r\n\r\n\r\n\r\n##### 認証コード送信-メール送信\r\n\r\n##### 認証コード送信-戻り値チェック\r\n\r\n##### 認証コード送信-画面表示切替\r\n\r\n##### 認証コード送信-エラーメッセージ\r\n\r\n\r\n### 6. 認証コード入力\r\n\r\n### 7. フォーム表示\r\n\r\n//TODO: リンク\r\n本頁では割愛とする。詳しくは\r\n\r\n\r\n\r\n#### フロー項目\r\n\r\n\r\n//TODO: メモ\r\n\r\n```\r\n- ページを開く\r\n- クエリパラメータのID✅\r\n  - OKならば次へ\r\n- メールに付与された手続き用コードを入力\r\n- 認証コードが届く\r\n  - 入力してフォームが標示される\r\n```"
  },
  {
    "id": "12",
    "title": "基本設計書-各種エラー制御",
    "content": ""
  },
  {
    "id": "13",
    "title": "基本設計書-各種データクリーニング",
    "content": ""
  },
  {
    "id": "14",
    "title": "基本設計書-同意書アップロード機能",
    "content": ""
  },
  {
    "id": "15",
    "title": "基本設計書-学会管理者認証機能",
    "content": "\r\n# 基本設計書 - 学会管理者認証機能\r\n\r\n本頁では、学会管理者向けの認証機能を定義する\r\n※学会利用者向けの認証は別の方式を取る為、別頁にて記載する\r\n\r\n\r\n## 基幹機能\r\n\r\n本頁では[Firebase Authentication](要件定義書-Firebase#FirebaseAuthentication3)を使用する。\r\n上記の詳細については上記リンクに記載する\r\n\r\n\r\n## フロー概要(Firebase)\r\n\r\n```mermaid\r\nsequenceDiagram\r\nautonumber\r\n\r\nbox rgba(206,243,218) 本アプリ\r\n  actor admin as 管理者・ブラウザ操作\r\n  participant server as サーバー\r\nend\r\n\r\nparticipant firebase as Firebase\r\n\r\nadmin->>+firebase: 認可処理\r\nfirebase->>+admin: 許可・拒否\r\nnote right of admin: 拒否された場合終了\r\nadmin->>+server: 認証処理\r\nserver<<->>admin: 結果表示\r\n```\r\n\r\n### 1. 認可処理\r\n\r\nGoogleアカウントが正常に作成されつつ、ユーザーの意思で作成されたかどうかを確認する\r\n※外部ツールやスクリプトなどで不正に操作されていないかも本処理で確認・ブロックが可能\r\n\r\n#### 認可処理フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n  start(スタート) --> buttonClick[ログインボタン押下]\r\n  buttonClick --> loginedCheck{Googleアカウント<br/>セッション確認}:::google\r\n  loginedCheck --> |セッション未確認| openPopup{GoogleFirebase<br/>ポップアップ表示}:::google\r\n  openPopup --> |ポップアップを閉じる| Cancel(キャンセル処理)\r\n  openPopup --> |アカウント選択| authCheck{認可チェック}:::google\r\n  authCheck --> |成功| OK(ログイン情報取得)\r\n  authCheck --> |失敗時<br/>エラーとして返却| FIN(終了)\r\n  loginedCheck --> |セッション確立済| OK\r\n\r\n  classDef google stroke:red\r\n\r\n  click buttonClick href \"#ログインボタン押下5\"\r\n  click loginedCheck href \"#Googleアカウントセッション確認5\"\r\n  click openPopup href \"#GoogleFirebaseポップアップ表示5\"\r\n  click authCheck href \"#認可チェック5\"\r\n  click FIN href \"#認可処理異常終了5\"\r\n  click OK href \"#ログイン情報取得5\"\r\n  click Cancel href \"#キャンセル処理5\"\r\n\r\n```\r\n\r\n##### ログインボタン押下\r\n\r\n画面上に表示されたログインボタンを押下する\r\n押下すると次の処理に移動する\r\n\r\n##### Googleアカウントセッション確認\r\n\r\nGoogleのアカウントがブラウザ側でセッションが確立されてるかかどうかを確認する\r\n既にセッションが確立済みの場合は以下の情報を付与して[認可処理](#認可処理5)へ移動する\r\n\r\n| 名称 | 物理名 | 説明 |\r\n| ---- | ---- | ---- |\r\n| メールアドレス | email | gmailアドレス  |\r\n| ユーザーID | uid | 発行されるユーザーID（アプリ側で発行されるユニークID） |\r\n| 表示名 | displayName | Googleで使用してる表示名 |\r\n| メールアドレス検証結果 | emailVerified | emailの確認が行われていないケースは`false`になる |\r\n| IDトークン | idToken | Google側が発行したIDトークン。こちらの値を用いてサーバーとの疎通を実施する |\r\n\r\nセッションが切れてる場合や確認できない場合は[GoogleFirebaseポップアップ表示](#GoogleFirebaseポップアップ表示5)へ移動\r\n\r\n\r\n\r\n##### GoogleFirebaseポップアップ表示\r\n\r\nGoogleのサービスを介して、ポップアップが表示される。\r\n以下のユーザー操作によって分岐が発生する\r\n\r\n- ログインするアカウントを選択した場合\r\n  - 既に本Appにログイン済のデバイスからのログインの場合、[認可チェック](#認可チェック5)へ進む\r\n  - 未ログインの場合や履歴が確認できない場合、パスワードを求められる\r\n  - ※こちらはGoogle側にて管理している為、本App上でパスワードの取得は不可となる\r\n- 選択せずにキャンセルを行った場合\r\n  - [キャンセル処理](#キャンセル処理5)へ進む\r\n\r\n\r\n##### 認可チェック\r\n\r\nGoogle側にてGoogleアカウントの認可を行う\r\nこの際に以下のユーザー情報が返却される\r\n\r\n※本Appにて管理・使用する情報のみ抜粋\r\n\r\n| 名称 | 物理名 | 説明 |\r\n| ---- | ---- | ---- |\r\n| メールアドレス | email | gmailアドレス  |\r\n| ユーザーID | uid | 発行されるユーザーID（アプリ側で発行されるユニークID） |\r\n| 表示名 | displayName | Googleで使用してる表示名 |\r\n| メールアドレス検証結果 | emailVerified | emailの確認が行われていないケースは`false`になる |\r\n| IDトークン | idToken | Google側が発行したIDトークン。こちらの値を用いてサーバーとの疎通を実施する |\r\n\r\n返却された`メールアドレス検証結果`にて分岐を実施\r\n\r\n- メールアドレス検証結果が`true`の場合\r\n  - ログイン情報を取得し、[ログイン情報取得](#ログイン情報取得5)へと進む\r\n- メールアドレス検証結果が`false`の場合\r\n  - [認可処理異常終了](#認可処理異常終了5)へと進む\r\n\r\n##### ログイン情報取得\r\n\r\n前処理で取得したデータを使用し、次の処理へと移動\r\n\r\n##### キャンセル処理\r\n\r\nポップアップを閉じた処理に本処理が動作する\r\nエラーメッセージを表示し処理を終了する\r\n\r\n##### 認可処理異常終了\r\n\r\nメールアドレス検証結果が`false`の場合、本処理が動作する。\r\nエラーメッセージを表示し処理を終了する\r\n※本処理はリロードをしない限り再度処理を行えないように制御する\r\n\r\n\r\n<br/>\r\n\r\n\r\n#### 2. 認証処理 / 結果表示表示\r\n\r\n本処理では正常に認可されたアカウントが本Appを使用する権限があるかどうかをチェックする\r\nそのため、前処理にて取得したユーザー情報を元にアカウントチェックを実施する\r\n\r\n##### 認証処理フロー\r\n\r\n```mermaid\r\nflowchart TD\r\n  スタート(スタート) --> API{API送信}\r\n  API --> |エラー発生|Error\r\n  API --> |正常| selectDB[データベース参照]\r\n   subgraph サーバー処理\r\n      selectDB --> exists{データ存在チェック}\r\n      exists --> |あり| returnData[データ返却]\r\n      exists --> |なし| returnNull[null返却]\r\n    end\r\n  returnData --> store[ブラウザに保存]\r\n  returnNull --> Error[エラーメッセージ表示]\r\n  Error --> FIN(終了)\r\n  store --> FIN\r\n\r\n  click API href \"#API送信5\"\r\n  click selectDB href \"#データベース参照5\"\r\n  click exists href \"#データ存在チェック5\"\r\n  click returnData href \"#データ返却5\"\r\n  click returnNull href \"#null返却5\"\r\n  click Error href \"#エラーメッセージ表示5\"\r\n  click store href \"#ブラウザに保存5\"\r\n\r\n```\r\n\r\n##### API送信\r\n\r\n前処理にて取得したユーザー情報を元にサーバー側へリクエストを送信する\r\n\r\n| URL | HTTPメソッド |\r\n| ---- | ---- |\r\n| `/api/user` | GET |\r\n\r\nその他のHttpヘッダー情報は[API共通機能](基本設計書-API共通機能#リクエスト情報送信4)を参照\r\n\r\n<br />\r\n\r\n**リクエスト情報**\r\n| キー名称 | 値 |\r\n| ---- | ---- |\r\n| uid | Firebaseから発行されたユーザーID |\r\n\r\n※APIの処理については[API共通機能](基本設計書-API共通機能)を参照\r\n\r\n##### データベース参照\r\n\r\n前処理で送信したリクエスト情報を元にデータベースへ存在確認を実施する\r\nFirebase DataStoreへとアクセスを実施する\r\n\r\n##### データ存在チェック\r\n\r\nデータの結果を参照し、以下の処理分岐を実施する\r\n\r\n- データが存在する場合\r\n  - [データ返却](#データ返却5)へと進む\r\n- データが存在しない場合\r\n  - [null返却](#null返却5)へと進む\r\n\r\n##### データ返却\r\n\r\n以下のデータをJSON形式にて返却する\r\n\r\n| 親オブジェクト | 名称 | 物理名 | 説明 |\r\n| ---- | ---- | ---- | ---- |\r\n| - | ユーザー | User | ユーザーオブジェクト |\r\n| User | ユーザー名 | name | ユーザー名 |\r\n| User | メールアドレス | email | メールアドレス |\r\n| User | ユーザーID | uid | 発行されるユーザーID（アプリ側で発行されるユニークID） |\r\n| User | 削除フラグ | deleted | 削除フラグ（`true`=削除済） |\r\n\r\n##### null返却\r\n\r\nデータが存在しない場合は`null`を返却する\r\n\r\n##### エラーメッセージ表示\r\n\r\nサーバー側との疎通が失敗した場合、またはユーザーのデータが存在しない場合はエラーメッセージを表示する\r\n\r\n| エラーメッセージ | 備考 |\r\n| ---- | ---- |\r\n| エラーが発生しました | 原因関してはセキュリティの問題もあるため、明示しない |\r\n\r\n##### ブラウザに保存\r\n\r\n//TODO: リンク\r\nReduxの機能を使用し、ブラウザ側に保存処理を行う\r\n学会管理者専用機能はブラウザ側に保存されたトークンを用いて、専用のAPIにアクセスが可能になる\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "id": "16",
    "title": "基本設計書-排他制御",
    "content": ""
  },
  {
    "id": "17",
    "title": "基本設計書-環境設定",
    "content": "\r\n# 環境設定\r\n\r\n本頁ではプロジェクトに関わる環境等の設定情報を定義する。\r\n\r\n\r\n## 本頁の目的\r\n\r\n[要件定義書のGitHubのブランチ管理について](要件定義書#GitHubのブランチ管理について5)に記載した通り、複数台の環境を用意する。その理由は以下の通り\r\n\r\n- 品質向上\r\n- 緊急度の高い不具合へのリカバリー\r\n- デグレードの対策を速やかに行う\r\n- 各環境への依存関係などを無くし、テストを容易にする\r\n  - テストは機能に対する担保をする為のものであり、前提となる準備に不要なプロセスを生じるのは本末転倒であるため\r\n  - そのため、各環境でデータ依存を無くすのが目的である\r\n\r\n\r\n\r\n## 環境設定項目\r\n\r\n### アプリケーション環境設定情報\r\n\r\nアプリケーション上で使用する環境設定は以下の通りとする。\r\nまた、セキュリティに関わる事項については漏洩に繋がる恐れがあるため、本件では記載しない。（秘匿情報と記載する）\r\n\r\n\r\n\r\n| キー名称 | 使用用途 | 本番環境設定値(main) | 受入環境設定値(release) | テスト環境設定値(staging) | 備考欄 |\r\n| ---- | ---- | ---- | ---- | ---- | ---- |\r\n| MAIL_HOST | メールを送信する際に必要となるホスト名 | ※本番構築時にメールサーバーを選定 | ※本番構築時にメールサーバーを選定 | smtp.gmail.com | 受入・本番のみメールサーバーは学会管理者様側でご用意し、それ以外の環境はgmailを使用 |\r\n| MAIL_PORT | メールを送信する際に必要となるポート番号 | ※本番構築時にメールサーバーを選定 | ※本番構築時にメールサーバーを選定 | 587 | 受入・本番のみメールサーバーは学会管理者様側でご用意し、それ以外の環境はgmailを使用 |\r\n| MAIL_USERNAME | メールを送信する際に必要となるメールアドレス | ※本番構築時にメールサーバーを選定 | ※本番構築時にメールサーバーを選定 | オブジェクティブコアが用意（gmail) | 受入・本番のみメールサーバーは学会管理者様側でご用意し、それ以外の環境はgmailを使用 |\r\n| MAIL_PASSWORD | メールを送信する際に必要となるメールアドレスのパスワード | 秘匿情報 | 秘匿情報 | 秘匿情報 | 受入・本番のみメールサーバーは学会管理者様側でご用意し、それ以外の環境はgmailを使用 |\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n "
  },
  {
    "id": "18",
    "title": "基本設計書",
    "content": "\r\n\r\n# 基本設計書\r\n\r\n## 認証\r\n本プロジェクトは2点の認証方式を採用します\r\n\r\n### 管理ログイン\r\n\r\n- 使用者\r\n  - 交通費申請の問い合わせ担当\r\n  - 経理などの清算処理の担当者\r\n  - アプリの管理者\r\n- 機能一覧\r\n  - 交通費申請者の招待\r\n  - 同意書参照機能\r\n  - \r\n\r\n- 管理側\r\n  - 使用者：交通費申請の問い合わせ担当者\r\n  - \r\n- ユーザー側\r\n\r\n### 管理側について"
  },
  {
    "id": "19",
    "title": "要件定義書-Firebase",
    "content": "\r\n# Firebaseについて\r\n\r\n本システムはGoogleの[Firebase](https://firebase.google.com/?hl=ja)を使用します。\r\n\r\n## 使用する機能\r\n| 機能名                     | 概要     | 概要                                  |\r\n|-------------------------|--------|-------------------------------------|\r\n| Firebase Authentication | 認可機能   | Google認可機能を用いて、安全かつパスワードを保持せずに運用が可能 |\r\n| Firestore Database      | データベース | NOSQLのデータベースでの管理で、データベースの変更が容易      |\r\n\r\n### Firebase Authentication\r\n\r\nGoogle認可機能を用いて、安全かつデータベース上にパスワードを保持せずに運用が可能な機能です。\r\n上記の機能を用いたフローや大まかの流れについては[基本設計書-学会管理者認証機能](基本設計書-学会管理者認証機能)に記載。\r\n\r\n\r\n\r\n### Firestore Database\r\n\r\n今回使用するデータベース情報を定義します。\r\n\r\n詳細は[基本設計書-データベース定義書](./基本設計書-データベース定義書)\r\n\r\n**※本項目は基本設計後にFIX予定**\r\n\r\n\r\n\r\n```mermaid\r\n\r\n---\r\nconfig:\r\n  theme: 'base' \r\n  themeVariables:\r\n    \"primaryColor\": \"#ffffff\"\r\n---\r\n\r\nerDiagram\r\n  ユーザー {\r\n    string name\r\n    string email\r\n    string uid\r\n  }\r\n  \r\n  ほげほげ {\r\n    \r\n  }\r\n\r\n\r\n```"
  },
  {
    "id": "20",
    "title": "要件定義書",
    "content": "\r\n# 要件定義書\r\n\r\n## 更新履歴\r\n\r\n|日付|版|更新者|更新内容|\r\n|---|---|---|---|\r\n|2025/10/01|0.1|OCR中上|新規作成|\r\n|||||\r\n\r\n## 前提となる文言\r\n\r\n本ドキュメントでは以下の文言を用い、認識の齟齬を防ぎます。\r\n\r\n\r\n|用語|解説|\r\n|---|---|\r\n|学会利用者|システムを使用する人間、交通費の申請者、学会の方|\r\n|学会管理者|システムを管理する人間、交通費の承認者、運用する人間|\r\n|開発元・オブジェクティブコア|開発元である株式会社オブジェクティブコア|\r\n|国際文献社|株式会社国際文献社さま|\r\n\r\n## 概要\r\n\r\n以下の要件に合致するシステムを作成します\r\n- スクラッチ開発にて、交通費管理をシステム化を実施\r\n- 手書き・FAX・メールでの申請をWebにて統一する\r\n- お客様の個人情報はメールを徴収さえ出来れば申請が可能にする\r\n- 自動計算の機能を行い、作業コストの低減を実施する\r\n- 同意書のアップロード機能を実施し、エビデンスを担保する\r\n\r\n## 業務要件\r\n\r\n### ステークホルダー\r\n本システムに関連するステークホルダーを記載します。\r\nまた、全体的なシステムを利用する上での関係図を記載しております\r\n\r\n\r\n```mermaid\r\nsequenceDiagram\r\n    actor user as 学会利用者\r\n    participant　system as 本システム\r\n    actor admin as 学会管理者\r\n    actor we as オブジェクティブコア\r\n    actor client as 国際文献社\r\n\r\n    admin->>+system: 承認データ入力\r\n    system->>+user: メール送信\r\n    user->>+system: 認証実施・情報の入力・交通費申請\r\n    admin->>+system: 情報の確認・交通費承認\r\n\r\n    note right of system: 障害発生時・保守\r\n    note right of we: ログで検知\r\n    we->>+system: 不具合調査・保守点検\r\n    note right of user: システムに関する要望や問い合わせ\r\n\r\n    user->>+client: 問い合わせ対応\r\n    note over we,client: システム・運用面で<br/>問い合わせ対応を実施\r\n    client->>+we: 問い合わせ確認弊社返答\r\n```\r\n\r\n// TODO: memo\r\n```\r\n・見直し案\r\n　・管理者（学会管理者様）\r\n　・利用者（学会利用者様）\r\n　・企画社（株式会社　国際文献社）\r\n　・開発社（株式会社　オブジェクティブコア）\r\n・検討ポイント\r\n　・今後の資料等を考慮し、最初に表現も含めて整理しておいた方が良い。\r\n　・エビデンスや説明として資料の抜粋含めて学会に示された際に誤解を生まない表現が良い。\r\n　・混同されにくいように人を示す「者」と企業を示す「社」を使い分ける。\r\n　　（企業間対応ではないので、この違いで学会側との混同はほぼ避けられるはず。）\r\n　・以下、個別の補足。\r\n　　・「エンドユーザー」はこれだけカタカナで長くなるので、フロー図等でボックスサイズに影響。\r\n　　・「お客様」は学会が目にした際に「お客様は学会だろ！」が来るかも。\r\n　　・「委託元」も考えたが、同様に「委託元は学会だろ！」が来るかも。\r\n　　・「開発元」も考えたが、「開発元は国際文献社だろ！」と「元」に引っ張られるかも。\r\n　　・現在難航している事象が委託先との連携も含めての対応だと「委託」に敏感になるかも。\r\n　　・連名での提示が必要な場合、上記なら「企画・開発」として連名表示で良い。\r\n　　・企画社として明示することで、こちらの管理や、仕様調整費用も提示しやすくなる。\r\n```\r\n\r\n\r\n## 機能・非機能要件\r\n\r\n本プロジェクトを成功させるために、以下の機能を提供いたします。\r\n\r\n\r\n### 機能要件\r\nお客様からご提示のあった要件・またはそれに関連する機能の一覧となります。\r\n\r\n|機能名|<div style=\"width: 7rem;\">使用者</div>|概要|詳細|備考欄|\r\n|---|---|---|---|---|\r\n|[認証機能](/設計書-認証機能)|管理者|管理システムでのログイン、認証・認可処理を実施|ログイン方式は信頼性の高いGoogle Firebase Authenticationを採用とする|[パスワード変更については別途認証機能で記載](/設計書-認証機能)|\r\n|[交通費申請一覧](/設計書-交通費申請一覧)|管理者|申請された交通費を一覧表示する||\r\n|[交通費申請詳細](/設計書-交通費申請詳細)|管理者|申請された交通費を詳細表示する|承認・否認も本機能で実施する|\r\n|[同意書アップロード機能](/設計書-同意書アップロード機能)|エンドユーザー|申請されたフォームに同意書をアップロードする||\r\n|[交通費申請](/設計書-交通費申請)|エンドユーザー|交通費申請を行う||\r\n|[ワンタイムURL発行機能](/設計書-ワンタイムURL発行機能)|エンドユーザー|一時的な認証を許可する為のURLを発行する||\r\n\r\n※追加のご要望に関しては別途スケジュール・要件を定義させて頂きます。\r\n\r\n\r\n### 非機能要件\r\nお客様からご提示はございませんでしたが、システムの挙動を担保するための機能一覧となります。\r\n\r\n|機能名|<div style=\"width: 7rem;\">使用者</div>|概要|詳細|備考欄|\r\n|---|---|---|---|---|\r\n|[排他制御](/設計書-排他制御)|共通|意図しないデータ更新を行わせないためのロック機能||\r\n|[各種データクリーニング](/設計書-各種データクリーニング)|共通|古くなったデータを定期削除する||\r\n|[各種エラー制御](/設計書-各種エラー制御)|エンドユーザー|一時的な認証を許可する為のURLを発行する||\r\n\r\n\r\n### 全機能とのシナリオフロー\r\n\r\n\r\n\r\n\r\n## 環境\r\n以下のシステム構成で動作いたします。\r\n\r\n| 大項目         | 項目           | 内容                           | 備考欄                  |\r\n|-------------|--------------|------------------------------|----------------------|\r\n| ハードウェア      | CPU          | Vercel / サーバーレス環境            | プランによって異なります         |\r\n| ハードウェア      | メモリ          | Vercel / サーバーレス環境            | プランによって異なります         |\r\n| ハードウェア      | ストレージ        | Firebase Storage             | 添付ファイル・画像などを格納       |\r\n| ハードウェア      | ネットワーク       | 帯域制限なし、Vercel CDNを利用         | プランによって異なります         |\r\n| ソフトウェア      | Webサーバー      | Vercel / サーバーレス環境            |                      |\r\n| ソフトウェア      | アプリケーションサーバー | Vercel / サーバーレス環境            |                      |\r\n| ソフトウェア      | フレームワーク      | Next.js                      |                      |\r\n| ソフトウェア      | データベース       | Firebase Cloud Firestore     |                      |\r\n| ソフトウェア      | その他ライブラリ     | [使用ライブラリ参照](./使用ライブラリ)                    |                      |\r\n| 使用技術        | 言語           | React.js (TypeScript)        |　サーバー環境も同様のNext.jsを採用                      |\r\n| 使用技術        | バージョン管理      | Git                          | Gitのリモート環境はGitHubを採用 |\r\n| 使用技術        | CI/CD        | GitHub Action                |                      |\r\n| 使用技術        | IDE/エディタ     | VSCode                       |                      |\r\n| 使用技術        | ドキュメント       | 本Webにて公開                     | PJT終了後はPDFにてご納品      |\r\n| 設定          | 環境変数         | [環境設定は別紙参照](./基本設計書-環境設定)                    |                      |\r\n| 設定          | 設定ファイル       | [設定ファイル一覧は環境設定に同梱](./基本設計書-環境設定)                  |                      |\r\n| サーバ構成       | 本番環境         | Vercel / サーバーレス環境            | [動作確認について](./動作確認)    |\r\n| サーバ構成       | ステージング環境     | Vercel / サーバーレス環境（Proプラン)  | [動作確認について](./動作確認)        |\r\n| サーバ構成       | 開発環境         | Vercel / サーバーレス環境（Proプラン)  | [動作確認について](./動作確認)        |\r\n| ログ・監視       | ログ管理         | Vercel / サーバーレス環境（Proプラン)  | [動作確認について](./動作確認)        |\r\n| ログ・監視       | 監視ツール        | Vercel / サーバーレス環境            |                      |\r\n| デプロイ手順      | -            | Vercel / サーバーレス環境での動作        | [動作確認について](./動作確認)        |\r\n| バックアップ・リカバリ | バックアップポリシー   | [Firebase Blazeプラン](./Firebase)での契約        |                      |\r\n| バックアップ・リカバリ | リストア手順       | [Firebase Blazeプラン](./要件定義書-Firebase)で、データの復元を行う |                      |\r\n| セキュリティ      | 認証・認可        | [Firebase Authentication](./要件定義書-Firebase)      | データは保護観点でSSL通信を採用    |\r\n| セキュリティ      | アクセス管理       | [アクセス管理について](./アクセス管理について)                   |                      |\r\n| その他         | 問い合わせ先       | 国際文献社・オブジェクティブコア               |\r\n\r\n\r\n### Vercelについて\r\n今回システムの大部分に用いるVercelについての補足説明となります。\r\n[公式サイト](https://vercel.com/)\r\n\r\n\r\n- 基本情報\r\n  - サーバーレスで動作するSaaS\r\n\r\n\r\n| プラン名称      | CPU      | メモリ    | 備考欄                      |\r\n|------------|----------|--------|--------------------------|\r\n| Hobby      | 1 vCPU   | 1024MB |                          |\r\n| Pro        | 1-2 vCPU | 最大16GB | ※使用想定やコストパフォーマンスの判断にてこちらを採用させて頂きます |\r\n| Enterprice | カスタム     | 最大16GB |\r\n\r\n## 開発工程の流れ\r\nお客様との成果物を通したコミュニケーションの流れについて\r\n\r\n### スケジュール\r\n\r\n大まかなスケジュールは以下の通りとさせて頂きます。\r\n\r\n//TODO: 確認ポイント\r\n\r\n```mermaid\r\ngantt\r\n    title 開発マイルストーン\r\n    dateFormat YYYY-MM-DD\r\n    section 要件定義\r\n      要件定義作成  :defined, 2025-10-01, 40d\r\n      要件定義レビュー  :2025-10-20, 30d\r\n      POC作成  :2025-11-01, 20d\r\n      POCレビュー  :2025-11-20, 10d\r\n    section 基本設計\r\n      基本設計 :2025-11-25, 30d\r\n      基本設計レビュー :2025-12-10, 20d\r\n    section デザイン\r\n      デザイン :2025-11-25, 25d\r\n      デザインレビュー :2025-12-5, 22d\r\n    section コーディング\r\n      コーディング :2026-01-08, 30d\r\n    section テスト（単体・結合）\r\n      テスト :2026-02-01, 28d\r\n    section 受入テスト\r\n      受入テスト :2026-03-01, 28d\r\n    section リリース・納品作業\r\n      リリース・納品作業 :2026-03-29, 2d\r\n      \r\n```\r\n\r\n\r\n### 進捗報告について\r\nお客様と弊社間での逐一のコミュニケーションのご協力をお願いしております。\r\n\r\n### オンラインMTG\r\n\r\n//TODO: 確認ポイント\r\n\r\n定期的な要件のすり合わせ、ご要望の確認や認識あわせのため定期的なオンラインMTGをお願いしております。\r\n\r\n- 開催方法\r\n  - Zoom / Google Meet\r\n- 開催頻度\r\n  - 隔週（〇曜日） or 毎週（〇曜日）\r\n- 参加メンバー\r\n  - 弊社・お客様で最低1名以上で開催\r\n- \r\n\r\n### 進捗管理\r\n\r\n弊社ガントチャートを使用します\r\nガントチャート上では2種類の進捗管理を実施します。\r\n各プロジェクトを作成して共有\r\n\r\n- **内部進捗管理**\r\n  - 参加者\r\n    - オブジェクティブコア\r\n    - 国際文献社さま\r\n  - 目的\r\n    - 2社間での課題整理、未確定の仕様の整理\r\n    - 細かい点やシステム仕様の部分でエンド様に関わらない箇所を網羅的に検討する\r\n- **外部進捗管理**\r\n  - 参加者\r\n    - オブジェクティブコア\r\n    - 国際文献社さま\r\n    - 学会管理者・学会利用者\r\n  - 目的\r\n    - 2社間での課題整理、未確定の仕様のご判断\r\n    - 要件を達成すべく必要な事項の洗い出しなどをリスト化\r\n    - その他学会利用者・学会管理者さまへに協力を煽ぐ際に必要な内容の共有等\r\n\r\n\r\n## 各工程の進め方\r\n\r\n### 要件定義\r\n\r\n#### コミュニケーションフロー\r\n下記の流れで実施させて頂きます。\r\n\r\n```mermaid\r\nsequenceDiagram\r\n  autonumber\r\n\r\n  actor we as 弊社\r\n  actor client as お客様\r\n  actor user as エンドユーザー\r\n\r\n  we ->>client: 要件定義書作成\r\n  client ->> we: 項目指摘修正・質問\r\n  loop 以下を繰り返し\r\n    we ->>client: 指摘内容反映・回答\r\n    client ->> user: ご確認依頼\r\n\r\n    note right of client: 内容に応じて<br/>弊社にご相談ください\r\n\r\n    user ->> client: ご質問・ご指摘\r\n    note left of client: 完了済の項目の<br/>フィードバックもお願いします\r\n\r\n    client ->> we: ご指摘内容を<br/>フィードバック\r\n    we ->> client: 指摘修正を反映\r\n    \r\n    note left of client: ご指摘がある際は⑥番へ\r\n    client ->> we: 指摘内容完了報告\r\n  end\r\n```\r\n\r\n#### ドキュメントについて\r\n\r\n- 納品前\r\n  - Webでの公開を実施する\r\n    - ※こちらはBasic認証を用い、一部関係者にしか共有しない方針で進める\r\n  - レビューについてはガントチャート・Slackにてご指摘を頂く\r\n  - 変更管理についてはGitHubにて実施する\r\n- 学会関係者提出後\r\n  - Webでの効果を実施する\r\n  - レビューについてガントチャートにて起票して頂く\r\n- 納品後\r\n  - 上記で確認して頂いた事項をPDFにて納品する\r\n\r\n\r\n##### ご留意事項\r\n以下の内容をお願いしております。\r\n- 要件定義の内容は注視すべき項目・そうではない項目が顧客によって優先度が異なります\r\n  - ご指摘がない項目についても、分かる範囲で構いませんのでご教示お願いします\r\n- ご不明な点は五月雨でも構いませんので、随時ご教示いただけますと幸いです。\r\n  - 別途質問票を展開させて頂きますので、分かるタイミングで随時ご回答ください\r\n\r\n##### ご確認・ご納品項目\r\n以下の形式を想定しております\r\n- 確認項目\r\n  - 本Webサイトにて指摘修正を反映いたします\r\n- 納品項目\r\n  - 本WebサイトをPDFにした形式を送付いたします\r\n\r\n\r\n### 基本設計\r\n#### コミュニケーションフロー\r\n\r\n下記の流れで実施させて頂きます。\r\n\r\n```mermaid\r\nsequenceDiagram\r\n  autonumber\r\n\r\n  actor we as 弊社\r\n  actor client as お客様\r\n  actor user as エンドユーザー\r\n\r\n  we ->>client: 各設計書作成\r\n  client ->> we: 項目指摘修正・質問\r\n  loop 以下を繰り返し\r\n    we ->>client: 指摘内容反映・回答\r\n    client ->> user: ご確認依頼\r\n\r\n    note right of client: 内容に応じて<br/>弊社にご相談ください\r\n\r\n    user ->> client: ご質問・ご指摘\r\n    note left of client: 完了済の項目の<br/>フィードバックもお願いします\r\n\r\n    client ->> we: ご指摘内容を<br/>フィードバック\r\n    we ->> client: 指摘修正を反映\r\n    \r\n    note left of client: ご指摘がある際は⑥番へ\r\n    client ->> we: 指摘内容完了報告\r\n  end\r\n```\r\n\r\n#### ドキュメントについて\r\n\r\n\r\n- 納品前\r\n  - Webでの公開を実施する\r\n    - ※こちらはBasic認証を用い、一部関係者にしか共有しない方針で進める\r\n  - レビューについてはガントチャート・Slackにてご指摘を頂く\r\n- 学会関係者提出後\r\n  - Webでの効果を実施する\r\n  - レビューについてガントチャートにて起票して頂く\r\n- 納品後\r\n  - 上記で確認して頂いた事項をPDFにて納品する\r\n\r\n\r\n### デザイン\r\n#### コミュニケーションフロー\r\n下記の流れで実施させて頂きます。\r\n\r\n```mermaid\r\nsequenceDiagram\r\n\r\n  actor we as 弊社\r\n  actor client as お客様\r\n  actor user as エンドユーザー\r\n\r\n  loop デザインテイスト\r\n    note right of we: 以下の形式を想定しております。<br/>・参考デザイン<br/>・参考サイト<br/> お客様のご要望を汲み取り方向性を定めます\r\n    we ->>client: デザインの方向性・テイストを送付\r\n\r\n    note left of client: 参考サイトやテイスト等あれば<br/>ご教示ください\r\n    client->>we: プランのフィードバック\r\n  end\r\n\r\n  loop デザインテイスト：エンドユーザー\r\n    note right of client: こちらのご調整を<br/>お願いします\r\n    activate client\r\n    client->>user: テイストをご提案\r\n    user->>we: ご指摘項目を共有\r\n    deactivate client\r\n  end\r\n\r\n\r\n  loop デザインカンプ\r\n    we ->>client: デザインカンプを<br/>サーバーにアップロード※\r\n    client ->> we: 確認依頼をフィードバック\r\n    we ->>client: 指摘内容の修正<br/>サーバーにアップロード\r\n\r\n    note right of client: ご調整お願いしますが<br/>ご要望あれば弊社も同席します\r\n\r\n    client ->> user: ご確認依頼\r\n    user ->> client: 確認依頼のフィードバック\r\n\r\n    client ->> we: ご指摘内容を<br/>フィードバック\r\n    we ->> client: 指摘修正を反映\r\n    \r\n    note left of client: ご指摘がある際は※に戻る\r\n    client->> user: 確認依頼\r\n    user->>client: 了承のご報告\r\n    client ->> we: 指摘内容完了報告\r\n  end\r\n```\r\n\r\n#### デザインファイル\r\n\r\n- 納品前\r\n  - Adobe XDの機能を用いてWebサイトの画面を表示\r\n- 納品後\r\n  - .xdファイルに納品する\r\n  - ※確認自体は済んでるため、最終的なアプリのリリース後に納品を実施する\r\n\r\n### コーディング\r\n\r\n以下の留意点を厳守する\r\n\r\n- コンポーネント志向を徹底する\r\n- 弊社内製のデザインフレームワークを用い、テスト工数・品質の向上・コストカットを実施\r\n  - 特殊なUI等は別途ご相談事項となりますので、予めご了承ください\r\n  - 該当フレームワークにて不具合が発見された場合、フレームワークの改善を実施しバージョンアップを実施する\r\n\r\n\r\n#### ソースコード管理\r\n\r\n- GitHubにて管理を行う\r\n  - 各環境にCI/CDを組み、変更や各環境に影響を与えないブランチ管理を実施する\r\n  - 詳しくは[GitHubのブランチ管理について](#GitHubのブランチ管理について5)参照\r\n\r\n##### GitHubのブランチ管理について\r\n\r\n各ブランチの運営については以下の通りで実施する\r\n\r\n- main\r\n  - 本番環境のブランチ\r\n- release\r\n  - 学会関係者向けのテスト環境\r\n- staging\r\n  - 国際文献社さま・オブジェクティブコアのメンバーの動作確認・テスト環境\r\n- develop\r\n  - 内部で確認する環境、開発者同士が現状の動作を確認する環境\r\n- feature1\r\n  - 開発者が作成したブランチ。名前は`feature/機能名英字`などの名称で作成\r\n- feature2\r\n  - 開発者が作成したブランチ。名前は`feature/機能名英字`などの名称で作成\r\n- hotfix\r\n  - 本番障害などの不具合が発生した際に緊急で対応するブランチ\r\n  \r\n\r\n```mermaid\r\ngitGraph\r\n    commit\r\n    branch release\r\n    commit\r\n    branch staging\r\n    commit\r\n    branch develop\r\n    commit\r\n    branch feature1\r\n    commit id: \"〇〇画面の修正\"\r\n    checkout develop\r\n    branch feature2\r\n    commit id: \"××画面の修正\"\r\n    checkout feature1\r\n    checkout develop\r\n    merge feature1 id:\"〇〇画面の修正済\"\r\n    checkout feature2\r\n    checkout develop\r\n    merge feature2 id: \"〇〇画面+××画面の修正済\"\r\n    commit\r\n    checkout staging\r\n    merge develop id: \"dev環境に反映\"\r\n    checkout release\r\n    merge staging id: \"リリース環境に反映\"\r\n    checkout main\r\n    merge release id:\"本番リリース\"\r\n    branch hotfix\r\n    checkout hotfix\r\n    commit id: \"緊急な不具合\"\r\n    checkout develop\r\n    merge hotfix id:\"デグレ防止の為、devにも反映。開発の際と同様にreleaseまで反映\"\r\n    checkout main\r\n    merge hotfix id:\"緊急リリース\"\r\n```\r\n\r\n\r\n\r\n### テスト\r\n\r\n以下の工程にて実施を行います\r\n\r\n\r\n#### テスト計画書\r\n\r\nテスト計画書を事前に展開し、学会関係者さま・国際文献社さまへの承認後に実施を行う\r\n\r\n#### 単体テスト\r\n\r\n- メソッド単位でのテストを実施\r\n- CI/CDにてテスト実行プログラムを組み、常に単体テストが通過した状態を担保する\r\n- テストの実現性が難しい場合は都度国際文献社さまへご相談を行い、結合テストにて重点的に実施する\r\n- 他モジュールやデータ依存が強いメソッドの場合、Mockにて実装を行い理論上のテストを実施\r\n  - 本メソッドに関連する機能については結合テストにて重点的な動作確認・テストを実施する\r\n- テスト内容についてはコーディングに記載された通りとなるが、実行結果についてはログを送付する\r\n  \r\n\r\n#### 結合テスト\r\n\r\n- 実際の画面を動作しテストを実施する\r\n- React.jsの特性上、画面リロード時・ある一定の操作の後にて動作が異なるため、重点的に実施を行う\r\n- 実際のテスト内容については別途テスト計画書を送付、それに沿った実行結果を送付する\r\n  - 実行結果についてはエビデンスを別途送付する\r\n\r\n\r\n#### テスト実施結果について\r\n\r\nテスト実施後についてはテスト結果とエビデンスを送付し、納品完了とする\r\n\r\n### デプロイ\r\n\r\n- GitHub / Vercelにて自動的なデプロイが可能\r\n  - ソースコードの反映しGitのマージ機能を用いると自動的に単体テスト実行後、全て問題なければ自動デプロイをされるように設定する\r\n- リリース前 / 後の運用を加味し環境別にてサーバーを構築、それに関連してGitブランチを分け安全かつ機動力の高い運動を行う\r\n  - ※詳細は[GitHubのブランチ管理について](#GitHubのブランチ管理について5)をご確認ください。\r\n\r\n\r\n### 納品物・ご提示する環境等\r\n\r\n各工程における納品物ををまとめると納品物は以下の通りとする\r\nまた、箇条書きの見出しは納品タイミングとし、納品物ではないが展開が必要なものも含めて記載\r\n\r\n- 要件定義終了後\r\n  - 要件定義書\r\n- デザインの承認終了後\r\n  - 特になし\r\n- 設計業務終了後\r\n  - 設計書\r\n- コーディング完了後\r\n  - 動作確認用のURLを展開する（納品物ではないが、完了後にご提示）\r\n  - 動作確認用のURLはstaging環境から作成する\r\n  - テスト計画書\r\n- テスト実施後\r\n  - テスト計画書に実施結果を追記して提出する\r\n  - テスト結果のエビデンス\r\n  - releaseブランチから作成した環境（URL）\r\n- シナリオテスト終了後\r\n  - ソースコード（現状のソースコードをzipにて納品）\r\n  - 各環境のアクセス権\r\n  - XDファイル\r\n  - 本番環境の構築\r\n  - 各ドキュメントファイルをPDFにて納品\r\n\r\n## 移行要件\r\n\r\n### システム移行について\r\n今回は現行となるシステムが存在しない為、システム自体の移行はなし\r\n\r\n### データの移行について\r\n\r\n- 運用を可能にするため、初期値となるデータを投入する\r\n  - 学会管理者のアカウント情報のデータは都度保守対応にて実施を行う\r\n  - ※本機能の実装コスト削減のため、上記の方針とする\r\n- \r\n\r\n\r\n\r\n## 運用\r\n\r\n\r\n\r\n\r\n"
  }
]